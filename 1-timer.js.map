{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst stopBtn = document.querySelector('[data-stop]');\nconst dateInput = document.getElementById('datetime-picker');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerId = null;\nlet isTimerRunning = false;\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  daysSpan.textContent = addLeadingZero(days);\n  hoursSpan.textContent = addLeadingZero(hours);\n  minutesSpan.textContent = addLeadingZero(minutes);\n  secondsSpan.textContent = addLeadingZero(seconds);\n}\n\nfunction resetTimer() {\n  updateTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n}\n\nfunction setControlsState({ startDisabled, stopDisabled, inputDisabled }) {\n  startBtn.disabled = startDisabled;\n  stopBtn.disabled = stopDisabled;\n  dateInput.disabled = inputDisabled;\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selected = selectedDates[0];\n\n    if (!selected || selected <= new Date()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      userSelectedDate = null;\n      setControlsState({\n        startDisabled: true,\n        stopDisabled: true,\n        inputDisabled: false,\n      });\n    } else {\n      userSelectedDate = selected;\n      setControlsState({\n        startDisabled: false,\n        stopDisabled: true,\n        inputDisabled: false,\n      });\n    }\n  },\n};\n\nflatpickr(dateInput, options);\n\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate || isTimerRunning) return;\n\n  isTimerRunning = true;\n  setControlsState({\n    startDisabled: true,\n    stopDisabled: false,\n    inputDisabled: true,\n  });\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const diff = userSelectedDate - now;\n    if (diff <= 0) {\n      clearInterval(timerId);\n      isTimerRunning = false;\n      updateTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      setControlsState({\n        startDisabled: true,\n        stopDisabled: true,\n        inputDisabled: false,\n      });\n      iziToast.success({\n        message: 'Countdown finished!',\n        position: 'topRight',\n      });\n      return;\n    }\n    updateTimer(convertMs(diff));\n  }, 1000);\n\n  updateTimer(convertMs(userSelectedDate - new Date()));\n});\n\nstopBtn.addEventListener('click', () => {\n  if (!isTimerRunning) return;\n  clearInterval(timerId);\n  isTimerRunning = false;\n  setControlsState({\n    startDisabled: false,\n    stopDisabled: true,\n    inputDisabled: false,\n  });\n  iziToast.info({\n    message: 'Timer stopped.',\n    position: 'topRight',\n  });\n  resetTimer();\n});\n\nsetControlsState({\n  startDisabled: true,\n  stopDisabled: true,\n  inputDisabled: false,\n});\nresetTimer();\n"],"names":["startBtn","stopBtn","dateInput","daysSpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","timerId","isTimerRunning","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","updateTimer","resetTimer","setControlsState","startDisabled","stopDisabled","inputDisabled","options","selectedDates","selected","iziToast","flatpickr","diff"],"mappings":"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"}